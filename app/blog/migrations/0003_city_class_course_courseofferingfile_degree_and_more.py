# Generated by Django 4.1.3 on 2023-02-18 10:46

import blog.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0002_alter_article_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('city_code', models.PositiveSmallIntegerField(db_index=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_number', models.PositiveIntegerField()),
                ('floor', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('course_code', models.CharField(max_length=50, validators=[blog.validators.validate_only_digits])),
            ],
        ),
        migrations.CreateModel(
            name='CourseOfferingFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('file', models.FileField(upload_to='files/')),
                ('upload', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('degree_code', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('department_code', models.CharField(max_length=50, unique=True, validators=[blog.validators.validate_only_digits])),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('group_code', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('province_code', models.PositiveSmallIntegerField(db_index=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, editable=False, max_length=250)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1380)])),
                ('semester_type', models.IntegerField(choices=[(1, 'نیمسال اول'), (2, 'نیمسال دوم'), (3, 'تابستان')])),
                ('semester_code', models.CharField(max_length=50, validators=[blog.validators.validate_only_digits])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('university_code', models.CharField(max_length=50, unique=True, validators=[blog.validators.validate_only_digits])),
                ('city_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.city')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor_code', models.CharField(max_length=50, unique=True, validators=[blog.validators.validate_only_digits])),
                ('is_active', models.BooleanField(default=True)),
                ('gender', models.CharField(choices=[('MALE', 'مرد'), ('FEMALE', 'زن')], max_length=20)),
                ('course_list', models.ManyToManyField(to='blog.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('major_code', models.CharField(max_length=50, unique=True, validators=[blog.validators.validate_only_digits])),
                ('degree_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.degree')),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.department')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.group')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('faculty_code', models.CharField(max_length=50, unique=True, validators=[blog.validators.validate_only_digits])),
                ('university_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.university')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='faculty_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.faculty'),
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('SATURDAY', 'شنبه'), ('SUNDAY', 'یکشنبه'), ('MONDAY', 'دوشنبه'), ('TUESDAY', 'سه شنبه'), ('WEDNESDAY', 'چهارشنبه'), ('THURSDAY', 'پنج شنبه'), ('FRIDAY', 'جمعه')], max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('offering_course_code', models.CharField(max_length=50, unique=True)),
                ('aggregate', models.BooleanField(default=False)),
                ('course_gender', models.CharField(choices=[('BOTH', 'فرقی ندارد'), ('MALE', 'مرد'), ('FEMALE', 'زن')], max_length=20)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.class')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.course')),
                ('major_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.major')),
                ('professor_id', models.ManyToManyField(to='blog.professor')),
                ('semester_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.semester')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='faculty_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.faculty'),
        ),
        migrations.AddField(
            model_name='city',
            name='province_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.province'),
        ),
    ]
